{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "DP203datafactorymgr"
		},
		"02_pipeline_sql_database_Linked_service_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of '02_pipeline_sql_database_Linked_service'"
		},
		"02_pipeline_staging_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of '02_pipeline_staging'"
		},
		"02_pipeline_synpase_linked_service_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of '02_pipeline_synpase_linked_service'"
		},
		"AdvantureWork_LS_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'AdvantureWork_LS'"
		},
		"AzureDataLakeStorage_LS_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'AzureDataLakeStorage_LS'"
		},
		"Copy_file_CSV_Dedicated_PoolActivityLog_synapse_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'Copy_file_CSV_Dedicated_PoolActivityLog_synapse'"
		},
		"DedicatedSql Pool copy csv from adf_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'DedicatedSql Pool copy csv from adf'"
		},
		"DynamicAzureDataLakeStorage_training_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'DynamicAzureDataLakeStorage_training'"
		},
		"GenericAzureSQLdb_training_LS_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'GenericAzureSQLdb_training_LS'"
		},
		"GenericAzureSqlDB_LS_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'GenericAzureSqlDB_LS'"
		},
		"TestParquet_linked service_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'TestParquet_linked service'"
		},
		"02_pipeline_staging_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://dp203storageaccountt.dfs.core.windows.net/"
		},
		"02_pipeline_synpase_linked_service_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "dp203training001.sql.azuresynapse.net"
		},
		"02_pipeline_synpase_linked_service_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "dp203DedicatedPool"
		},
		"02_pipeline_synpase_linked_service_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "sqladminuser"
		},
		"05_pipeline_databricks_orchestration_key_vault_properties_typeProperties_baseUrl": {
			"type": "string",
			"defaultValue": "https://dp203-mykey-vault.vault.azure.net/"
		},
		"AdvantureWork_LS_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "dp203databaseservertraining.database.windows.net"
		},
		"AdvantureWork_LS_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "DP203SQLdatabase"
		},
		"AdvantureWork_LS_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "adminsql"
		},
		"AzureDataLakeStorage_LS_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://dp203storageaccountt.dfs.core.windows.net/"
		},
		"Copy_file_CSV_Dedicated_PoolActivityLog_synapse_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://dp203storageaccountt.dfs.core.windows.net/"
		},
		"DynamicAzureDataLakeStorage_training_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://dp203accountblobtraining.dfs.core.windows.net/"
		},
		"GenericAzureSQLdb_training_LS_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "@{linkedService().ServerNameTraining}"
		},
		"GenericAzureSQLdb_training_LS_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "@{linkedService().DatabaseNameTraining}"
		},
		"GenericAzureSQLdb_training_LS_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "adminsql"
		},
		"GenericAzureSqlDB_LS_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "@{linkedService().ServerName}"
		},
		"GenericAzureSqlDB_LS_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "@{linkedService().DabaseName}"
		},
		"GenericAzureSqlDB_LS_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "adminsql"
		},
		"Liked_Service_SAS_sasUri": {
			"type": "secureString",
			"metadata": "Secure string for 'sasUri' of 'Liked_Service_SAS'"
		},
		"TestParquet_linked service_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://dp203storageaccountt.dfs.core.windows.net/"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/Demo_pipeline_trigger')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Wait1",
						"type": "Wait",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"windowStart": {
						"type": "string"
					},
					"windowEnd": {
						"type": "string"
					}
				},
				"annotations": [],
				"lastPublishTime": "2024-08-07T10:03:10Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Demo_pipeline_trigger_2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Wait1",
						"type": "Wait",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2024-08-07T09:12:11Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Demon_pipeline_Storage_event')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Wait1",
						"type": "Wait",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"FileName": {
						"type": "string"
					}
				},
				"annotations": [],
				"lastPublishTime": "2024-08-07T10:36:49Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/child')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Set variable1",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "var",
							"value": "test"
						}
					},
					{
						"name": "Set variable2",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set variable1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "var",
							"value": 2
						}
					},
					{
						"name": "Web1",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Set variable1",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "POST",
							"headers": {},
							"url": "https://prod2-07.francecentral.logic.azure.com:443/workflows/daa9488f804b42ad950345b0418a5f8f/triggers/When_a_HTTP_request_is_received/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2FWhen_a_HTTP_request_is_received%2Frun&sv=1.0&sig=ubJpW_5Xh0AM2QZIWtSiYkduV_QSJC_7B3B7VqicfwM",
							"body": {
								"value": "{\n    \"message\" : \"This is a custom dynamic message from your pipeline with run ID @{pipeline().RunId}.\",\n    \"dataFactoryName\" : \"@{pipeline().DataFactory}\", \n    \"pipelineName\" : \"@{pipeline().Pipeline}\", \n    \"receiver\" : \"@{pipeline().parameters.receiver}\"\n   }",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"receiver": {
						"type": "string",
						"defaultValue": "mohammedgrini1@gmail.com"
					}
				},
				"variables": {
					"var": {
						"type": "Integer"
					}
				},
				"annotations": [],
				"lastPublishTime": "2024-08-05T14:33:00Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline_demo_review')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Wait1",
						"type": "Wait",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"WindowsStart": {
						"type": "string",
						"defaultValue": "@trigger().outputs.windowStartTime"
					},
					"WindowsEnd": {
						"type": "string",
						"defaultValue": "@trigger().outputs.windowEndTime"
					}
				},
				"annotations": [],
				"lastPublishTime": "2024-08-09T13:02:16Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline_showing_ci_cd_behaviour')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Wait1",
						"description": "Added to feature 1",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "Wait2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					},
					{
						"name": "Wait2",
						"type": "Wait",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/02_pipeline_sql_database_Linked_service')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('02_pipeline_sql_database_Linked_service_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/02_pipeline_staging')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('02_pipeline_staging_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('02_pipeline_staging_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/02_pipeline_synpase_linked_service')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDW",
				"typeProperties": {
					"server": "[parameters('02_pipeline_synpase_linked_service_properties_typeProperties_server')]",
					"database": "[parameters('02_pipeline_synpase_linked_service_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('02_pipeline_synpase_linked_service_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('02_pipeline_synpase_linked_service_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/05_pipeline_databricks_orchestration_key_vault')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureKeyVault",
				"typeProperties": {
					"baseUrl": "[parameters('05_pipeline_databricks_orchestration_key_vault_properties_typeProperties_baseUrl')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AdvantureWork_LS')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('AdvantureWork_LS_properties_typeProperties_server')]",
					"database": "[parameters('AdvantureWork_LS_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('AdvantureWork_LS_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('AdvantureWork_LS_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDataLakeStorage_LS')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('AzureDataLakeStorage_LS_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('AzureDataLakeStorage_LS_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Copy_file_CSV_Dedicated_PoolActivityLog_synapse')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('Copy_file_CSV_Dedicated_PoolActivityLog_synapse_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('Copy_file_CSV_Dedicated_PoolActivityLog_synapse_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DedicatedSql Pool copy csv from adf')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDW",
				"typeProperties": {
					"connectionString": "[parameters('DedicatedSql Pool copy csv from adf_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DynamicAzureDataLakeStorage_training')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"parameters": {
					"DatabaseNameTraining": {
						"type": "string"
					},
					"ServerNameTraining": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('DynamicAzureDataLakeStorage_training_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('DynamicAzureDataLakeStorage_training_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/GenericAzureSQLdb_training_LS')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "the aims of this link service is to demonstrate how to create paramaters in pipepline using ADF.",
				"parameters": {
					"ServerNameTraining": {
						"type": "string"
					},
					"DatabaseNameTraining": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('GenericAzureSQLdb_training_LS_properties_typeProperties_server')]",
					"database": "[parameters('GenericAzureSQLdb_training_LS_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('GenericAzureSQLdb_training_LS_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('GenericAzureSQLdb_training_LS_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/GenericAzureSqlDB_LS')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"parameters": {
					"ServerName": {
						"type": "string"
					},
					"DabaseName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('GenericAzureSqlDB_LS_properties_typeProperties_server')]",
					"database": "[parameters('GenericAzureSqlDB_LS_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('GenericAzureSqlDB_LS_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('GenericAzureSqlDB_LS_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Liked_Service_SAS')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"sasUri": "[parameters('Liked_Service_SAS_sasUri')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/TestParquet_linked service')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('TestParquet_linked service_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('TestParquet_linked service_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/default')]",
			"type": "Microsoft.DataFactory/factories/managedVirtualNetworks",
			"apiVersion": "2018-06-01",
			"properties": {},
			"dependsOn": []
		}
	]
}